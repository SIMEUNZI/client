{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\project\\\\group--\\\\client\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogout = () => {\n    // 로그아웃 처리\n    setUsername('');\n    setPassword('');\n    setIsLoggedIn(false);\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    // 실제로는 서버로 로그인 정보를 전달하고, 유효성을 확인하는 로직이여야 합니다.\n    // 이 예시에서는 간단하게 사용자명과 비밀번호가 'user'/'password'인 경우에 로그인 성공으로 간주합니다.\n    if (username === 'user' && password === 'password') {\n      setIsLoggedIn(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex m-2 me-0\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"nav-item nav-link\",\n      onClick: handleLogout,\n      children: /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"P8mHloE1ZcxOeBSOgiARhxl2hEY=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","username","setUsername","password","setPassword","handleLogout","handleLogin","e","preventDefault","className","children","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/works/project/group--/client/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogout = () => {\r\n    // 로그아웃 처리\r\n    setUsername('');\r\n    setPassword('');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    // 실제로는 서버로 로그인 정보를 전달하고, 유효성을 확인하는 로직이여야 합니다.\r\n    // 이 예시에서는 간단하게 사용자명과 비밀번호가 'user'/'password'인 경우에 로그인 성공으로 간주합니다.\r\n    if (username === 'user' && password === 'password') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex m-2 me-0\">\r\n      {isLoggedIn ? (\r\n        <Link to=\"/\" className=\"nav-item nav-link\" onClick={handleLogout}>\r\n          <sup>Logout</sup>\r\n        </Link>\r\n      ) : (\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAH,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMM,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA,IAAIP,QAAQ,KAAK,MAAM,IAAIE,QAAQ,KAAK,UAAU,EAAE;MAClDH,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BX,UAAU,gBACTH,OAAA,CAACF,IAAI;MAACiB,EAAE,EAAC,GAAG;MAACF,SAAS,EAAC,mBAAmB;MAACG,OAAO,EAAEP,YAAa;MAAAK,QAAA,eAC/Dd,OAAA;QAAAc,QAAA,EAAK;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,gBAEPpB,OAAA;MAAMqB,QAAQ,EAAEX,WAAY;MAAAI,QAAA,gBAC1Bd,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEnB,QAAS;QAChBoB,QAAQ,EAAGd,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFpB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjB,QAAS;QAChBkB,QAAQ,EAAGd,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA9CQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAgDf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}