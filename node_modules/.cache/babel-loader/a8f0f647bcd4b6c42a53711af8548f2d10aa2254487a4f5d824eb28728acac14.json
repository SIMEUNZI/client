{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\project\\\\group--\\\\client\\\\src\\\\components\\\\products\\\\PRbutton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  backgroundColor: 'orange',\n  border: 'none',\n  borderRadius: '8px',\n  padding: '15px 30px',\n  textDecoration: 'none',\n  color: 'white',\n  fontSize: '1.5em',\n  transition: 'background-color 0.3s ease'\n};\nconst hoverStyle = {\n  backgroundColor: 'lightgray'\n};\nfunction PRbutton() {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const navigate = useNavigate();\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false); // 로그인 상태 상태값\n\n  // 로그인 여부 확인\n  useEffect(() => {\n    // 서버에서 로그인 여부 확인하는 로직\n    axios.get('/checkLoginStatus').then(response => {\n      setIsUserLoggedIn(response.data.loggedIn);\n    }).catch(error => {\n      console.error('로그인 상태 확인 실패:', error);\n      setIsUserLoggedIn(false);\n    });\n  }, []);\n\n  // 데이터 가져오기 클릭 핸들러\n  const handleGetData = () => {\n    axios.get('https://codingapple1.github.io/shop/data2.json').then(response => {\n      console.log(response.data);\n    }).catch(() => {\n      console.log('데이터 가져오기 실패');\n    });\n  };\n\n  // 상품 등록 버튼 클릭 핸들러\n  const handleClick = () => {\n    if (!isUserLoggedIn) {\n      const confirmed = window.confirm('로그인이 필요합니다. 로그인 하시겠습니까?');\n      if (confirmed) {\n        navigate('/login');\n      }\n    } else {\n      navigate('/product-register');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...buttonStyle,\n        ...(isHovered && hoverStyle)\n      },\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      onClick: handleClick,\n      children: \"\\uC0C1\\uD488 \\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetData,\n      children: \"\\uB370\\uC774\\uD130 \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PRbutton, \"lmgyuheOWwJrRFJkqqMNmsSnSCI=\", false, function () {\n  return [useNavigate];\n});\n_c = PRbutton;\nexport default PRbutton;\nvar _c;\n$RefreshReg$(_c, \"PRbutton\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","buttonStyle","backgroundColor","border","borderRadius","padding","textDecoration","color","fontSize","transition","hoverStyle","PRbutton","_s","isHovered","setIsHovered","navigate","isUserLoggedIn","setIsUserLoggedIn","get","then","response","data","loggedIn","catch","error","console","handleGetData","log","handleClick","confirmed","window","confirm","children","style","onMouseEnter","onMouseLeave","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/works/project/group--/client/src/components/products/PRbutton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: 'orange',\r\n  border: 'none',\r\n  borderRadius: '8px',\r\n  padding: '15px 30px',\r\n  textDecoration: 'none',\r\n  color: 'white',\r\n  fontSize: '1.5em',\r\n  transition: 'background-color 0.3s ease',\r\n};\r\n\r\nconst hoverStyle = {\r\n  backgroundColor: 'lightgray',\r\n};\r\n\r\nfunction PRbutton() {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false); // 로그인 상태 상태값\r\n\r\n  // 로그인 여부 확인\r\n  useEffect(() => {\r\n    // 서버에서 로그인 여부 확인하는 로직\r\n    axios.get('/checkLoginStatus')\r\n      .then(response => {\r\n        setIsUserLoggedIn(response.data.loggedIn);\r\n      })\r\n      .catch(error => {\r\n        console.error('로그인 상태 확인 실패:', error);\r\n        setIsUserLoggedIn(false);\r\n      });\r\n  }, []);\r\n\r\n  // 데이터 가져오기 클릭 핸들러\r\n  const handleGetData = () => {\r\n    axios.get('https://codingapple1.github.io/shop/data2.json')\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch(() => {\r\n        console.log('데이터 가져오기 실패');\r\n      });\r\n  };\r\n\r\n  // 상품 등록 버튼 클릭 핸들러\r\n  const handleClick = () => {\r\n    if (!isUserLoggedIn) {\r\n      const confirmed = window.confirm('로그인이 필요합니다. 로그인 하시겠습니까?');\r\n      if (confirmed) {\r\n        navigate('/login');\r\n      }\r\n    } else {\r\n      navigate('/product-register');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{ ...buttonStyle, ...(isHovered && hoverStyle) }}\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n        onClick={handleClick}\r\n      >\r\n        상품 등록\r\n      </button>\r\n\r\n      <button onClick={handleGetData}>데이터 가져오기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PRbutton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}