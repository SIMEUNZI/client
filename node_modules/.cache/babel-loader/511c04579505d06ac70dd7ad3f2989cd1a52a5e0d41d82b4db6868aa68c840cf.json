{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\project\\\\group--\\\\client\\\\src\\\\pages\\\\user\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginState } from '../../recoils/login';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const setLoginUser = useSetRecoilState(loginState);\n  const isLoggedIn = useRecoilValue(loginState);\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const changeData = useCallback(evt => {\n    setData(data => ({\n      ...data,\n      [evt.target.name]: evt.target.value\n    }));\n  }, []);\n  const handleLogout = () => {\n    setLoginUser(false);\n    navigate('/login');\n  };\n  const login = useCallback(async evt => {\n    evt.preventDefault();\n    const resp = await axios.post('http://localhost:8000/users/login', data);\n    console.log(resp);\n    if (resp.data.code === 200) {\n      setLoginUser(true); // user -> status\n      navigate('/home');\n    } else {\n      setData({\n        email: '',\n        password: ''\n      });\n    }\n  }, [data, setLoginUser, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        style: {\n          marginTop: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4 text-center\",\n          children: isLoggedIn ? '로그아웃' : '로그인'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: isLoggedIn ? handleLogout : login,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn border-secondary py-3 px-4 text-uppercase text-primary\",\n            children: isLoggedIn ? '로그아웃하기!' : '로그인 하기!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"mTGgF/IWJPoHwKCClIOx23FEjWY=\", false, function () {\n  return [useNavigate, useSetRecoilState, useRecoilValue];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useCallback","useState","useNavigate","loginState","useSetRecoilState","useRecoilValue","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","setLoginUser","isLoggedIn","data","setData","email","password","changeData","evt","target","name","value","handleLogout","login","preventDefault","resp","post","console","log","code","children","className","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/works/project/group--/client/src/pages/user/Login.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginState } from '../../recoils/login';\r\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const setLoginUser = useSetRecoilState(loginState);\r\n  const isLoggedIn = useRecoilValue(loginState);\r\n  const [data, setData] = useState({ email: '', password: '' });\r\n\r\n  const changeData = useCallback((evt) => {\r\n    setData((data) => ({ ...data, [evt.target.name]: evt.target.value }));\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    setLoginUser(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  const login = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    const resp = await axios.post('http://localhost:8000/users/login', data);\r\n    console.log(resp);\r\n    if (resp.data.code === 200) {\r\n      setLoginUser(true); // user -> status\r\n      navigate('/home');\r\n    } else {\r\n      setData({ email: '', password: '' });\r\n    }\r\n  }, [data, setLoginUser, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid py-5\">\r\n        <div className=\"container py-5\" style={{ marginTop: '50px' }}>\r\n          <h1 className=\"mb-4 text-center\">{isLoggedIn ? '로그아웃' : '로그인'}</h1>\r\n          <form onSubmit={isLoggedIn ? handleLogout : login}>\r\n            {/* 나머지 코드 */}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn border-secondary py-3 px-4 text-uppercase text-primary\">\r\n              {isLoggedIn ? '로그아웃하기!' : '로그인 하기!'}\r\n            </button>\r\n            {/* 나머지 코드 */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,QAAQ;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,YAAY,GAAGV,iBAAiB,CAACD,UAAU,CAAC;EAClD,MAAMY,UAAU,GAAGV,cAAc,CAACF,UAAU,CAAC;EAC7C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE7D,MAAMC,UAAU,GAAGpB,WAAW,CAAEqB,GAAG,IAAK;IACtCJ,OAAO,CAAED,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACK,GAAG,CAACC,MAAM,CAACC,IAAI,GAAGF,GAAG,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBX,YAAY,CAAC,KAAK,CAAC;IACnBD,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMa,KAAK,GAAG1B,WAAW,CAAC,MAAOqB,GAAG,IAAK;IACvCA,GAAG,CAACM,cAAc,CAAC,CAAC;IACpB,MAAMC,IAAI,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,mCAAmC,EAAEb,IAAI,CAAC;IACxEc,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACZ,IAAI,CAACgB,IAAI,KAAK,GAAG,EAAE;MAC1BlB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBD,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM;MACLI,OAAO,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACH,IAAI,EAAEF,YAAY,EAAED,QAAQ,CAAC,CAAC;EAElC,oBACEL,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACEzB,OAAA;MAAK0B,SAAS,EAAC,sBAAsB;MAAAD,QAAA,eACnCzB,OAAA;QAAK0B,SAAS,EAAC,gBAAgB;QAACC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAH,QAAA,gBAC3DzB,OAAA;UAAI0B,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAElB,UAAU,GAAG,MAAM,GAAG;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnEhC,OAAA;UAAMiC,QAAQ,EAAE1B,UAAU,GAAGU,YAAY,GAAGC,KAAM;UAAAO,QAAA,eAEhDzB,OAAA;YACEkC,IAAI,EAAC,QAAQ;YACbR,SAAS,EAAC,4DAA4D;YAAAD,QAAA,EACrElB,UAAU,GAAG,SAAS,GAAG;UAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAAC5B,EAAA,CA7CQD,KAAK;EAAA,QACKT,WAAW,EACPE,iBAAiB,EACnBC,cAAc;AAAA;AAAAsC,EAAA,GAH1BhC,KAAK;AA+Cd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}