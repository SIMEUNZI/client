{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport axios from 'axios';\nimport { atom, selector } from 'recoil';\nconst baseURL = 'http://localhost:8000/products/';\n\n// atom\nexport const productListState = atom({\n  key: 'product/productListState',\n  default: []\n});\nexport const productState = atom({\n  key: 'product/productState',\n  default: {\n    id: '',\n    name: '',\n    price: 0,\n    description: ''\n    // ... (다른 상품 관련 정보들)\n  }\n});\n\n// selector\nexport const productSelector = selector({\n  key: 'product/productSelector',\n  get: ({\n    get,\n    getCallback\n  }) => {\n    const getProductList = getCallback(({\n      set\n    }) => async (page, pageSize) => {\n      const resp = await axios.get(baseURL, {\n        params: {\n          page,\n          pageSize\n        }\n      });\n      set(productListState, resp.data);\n    });\n    const getProduct = getCallback(({\n      set\n    }) => async id => {\n      const resp = await axios.get(`${baseURL}${id}`);\n      set(productState, resp.data.product);\n    }, []);\n    const updateProduct = getCallback(({\n      set\n    }) => async item => {\n      const resp = await axios.put(`${baseURL}`, item);\n      // console.log('update', resp);\n    });\n    const addProduct = getCallback(({\n      set\n    }) => async item => {\n      const resp = await axios.post(`${baseURL}`, item);\n      // console.log('insert', resp);\n    });\n    const removeProduct = getCallback(({\n      set\n    }) => async id => {\n      const resp = await axios.delete(`${baseURL}${id}`);\n      console.log('delete', resp);\n    });\n    return {\n      getProductList,\n      getProduct,\n      updateProduct,\n      addProduct,\n      removeProduct\n    };\n  }\n});","map":{"version":3,"names":["axios","atom","selector","baseURL","productListState","key","default","productState","id","name","price","description","productSelector","get","getCallback","getProductList","set","page","pageSize","resp","params","data","getProduct","product","updateProduct","item","put","addProduct","post","removeProduct","delete","console","log"],"sources":["C:/works/project/group--/client/src/recoils/product.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport axios from 'axios';\r\nimport { atom, selector } from 'recoil';\r\n\r\nconst baseURL = 'http://localhost:8000/products/';\r\n\r\n// atom\r\nexport const productListState = atom({\r\n  key: 'product/productListState',\r\n  default: [],\r\n});\r\n\r\nexport const productState = atom({\r\n  key: 'product/productState',\r\n  default: {\r\n    id: '',\r\n    name: '',\r\n    price: 0,\r\n    description: '',\r\n    // ... (다른 상품 관련 정보들)\r\n  },\r\n});\r\n\r\n// selector\r\nexport const productSelector = selector({\r\n  key: 'product/productSelector',\r\n  get: ({ get, getCallback }) => {\r\n    const getProductList = getCallback(({ set }) => async (page, pageSize) => {\r\n      const resp = await axios.get(baseURL, { params: { page, pageSize } });\r\n      set(productListState, resp.data);\r\n    });\r\n\r\n    const getProduct = getCallback(\r\n      ({ set }) =>\r\n        async (id) => {\r\n          const resp = await axios.get(`${baseURL}${id}`);\r\n          set(productState, resp.data.product);\r\n        },\r\n      []\r\n    );\r\n\r\n    const updateProduct = getCallback(({ set }) => async (item) => {\r\n      const resp = await axios.put(`${baseURL}`, item);\r\n      // console.log('update', resp);\r\n    });\r\n\r\n    const addProduct = getCallback(({ set }) => async (item) => {\r\n      const resp = await axios.post(`${baseURL}`, item);\r\n      // console.log('insert', resp);\r\n    });\r\n\r\n    const removeProduct = getCallback(({ set }) => async (id) => {\r\n      const resp = await axios.delete(`${baseURL}${id}`);\r\n      console.log('delete', resp);\r\n    });\r\n\r\n    return { getProductList, getProduct, updateProduct, addProduct, removeProduct };\r\n  },\r\n});\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;AAEvC,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACA,OAAO,MAAMC,gBAAgB,GAAGH,IAAI,CAAC;EACnCI,GAAG,EAAE,0BAA0B;EAC/BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGN,IAAI,CAAC;EAC/BI,GAAG,EAAE,sBAAsB;EAC3BC,OAAO,EAAE;IACPE,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE;IACb;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,eAAe,GAAGV,QAAQ,CAAC;EACtCG,GAAG,EAAE,yBAAyB;EAC9BQ,GAAG,EAAEA,CAAC;IAAEA,GAAG;IAAEC;EAAY,CAAC,KAAK;IAC7B,MAAMC,cAAc,GAAGD,WAAW,CAAC,CAAC;MAAEE;IAAI,CAAC,KAAK,OAAOC,IAAI,EAAEC,QAAQ,KAAK;MACxE,MAAMC,IAAI,GAAG,MAAMnB,KAAK,CAACa,GAAG,CAACV,OAAO,EAAE;QAAEiB,MAAM,EAAE;UAAEH,IAAI;UAAEC;QAAS;MAAE,CAAC,CAAC;MACrEF,GAAG,CAACZ,gBAAgB,EAAEe,IAAI,CAACE,IAAI,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGR,WAAW,CAC5B,CAAC;MAAEE;IAAI,CAAC,KACN,MAAOR,EAAE,IAAK;MACZ,MAAMW,IAAI,GAAG,MAAMnB,KAAK,CAACa,GAAG,CAAE,GAAEV,OAAQ,GAAEK,EAAG,EAAC,CAAC;MAC/CQ,GAAG,CAACT,YAAY,EAAEY,IAAI,CAACE,IAAI,CAACE,OAAO,CAAC;IACtC,CAAC,EACH,EACF,CAAC;IAED,MAAMC,aAAa,GAAGV,WAAW,CAAC,CAAC;MAAEE;IAAI,CAAC,KAAK,MAAOS,IAAI,IAAK;MAC7D,MAAMN,IAAI,GAAG,MAAMnB,KAAK,CAAC0B,GAAG,CAAE,GAAEvB,OAAQ,EAAC,EAAEsB,IAAI,CAAC;MAChD;IACF,CAAC,CAAC;IAEF,MAAME,UAAU,GAAGb,WAAW,CAAC,CAAC;MAAEE;IAAI,CAAC,KAAK,MAAOS,IAAI,IAAK;MAC1D,MAAMN,IAAI,GAAG,MAAMnB,KAAK,CAAC4B,IAAI,CAAE,GAAEzB,OAAQ,EAAC,EAAEsB,IAAI,CAAC;MACjD;IACF,CAAC,CAAC;IAEF,MAAMI,aAAa,GAAGf,WAAW,CAAC,CAAC;MAAEE;IAAI,CAAC,KAAK,MAAOR,EAAE,IAAK;MAC3D,MAAMW,IAAI,GAAG,MAAMnB,KAAK,CAAC8B,MAAM,CAAE,GAAE3B,OAAQ,GAAEK,EAAG,EAAC,CAAC;MAClDuB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEb,IAAI,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO;MAAEJ,cAAc;MAAEO,UAAU;MAAEE,aAAa;MAAEG,UAAU;MAAEE;IAAc,CAAC;EACjF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}